<UserControl x:Class="GraphBuilder.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GraphBuilder.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d">
    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" MinWidth="250" />
            <ColumnDefinition Width="8*" MinWidth="800" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="600"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Row="0" Grid.Column="0" Padding="5" Content="Export Adjacency List" cal:Message.Attach="[Event Click] = [Action ExportAdjacencyList()]"></Button>
            <CheckBox Grid.Row="0" Grid.Column="1" Margin="10,8,0,0" Content="Export Weight?" IsChecked="{Binding ExportPanel.ExportWeight}"></CheckBox>
            <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" IsReadOnly="True" Text="{Binding ExportPanel.Content, Mode=TwoWay}"></TextBox>
        </Grid>
        <Canvas Grid.Column="1" 
                x:Name="GraphCanvas" Background="White"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                cal:Message.Attach="
                    [Event MouseLeftButtonUp] = [Action AddNode($source, $dataContext, $eventArgs)];
                    [Event MouseLeftButtonUp] = [Action ReleaseNode($eventArgs)];
                    [Event MouseMove] = [Action MoveNode($eventArgs)]">

            <ItemsControl ItemsSource="{Binding Graph.Edges}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas>
                            <Grid Canvas.Left="{Binding PinX}" Canvas.Top="{Binding PinY}">
                                <Line
									X1="{Binding SrcX}" Y1="{Binding SrcY}"
									X2="{Binding DstX}" Y2="{Binding DstY}"
									Stroke="{Binding Color}" StrokeThickness="2" />
                                <TextBox Text="{Binding Weight, Mode=TwoWay}" Background="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl Grid.IsSharedSizeScope="True" ItemsSource="{Binding Graph.Nodes}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas>
                            <Grid Canvas.Left="{Binding X, Mode=TwoWay}" Canvas.Top="{Binding Y, Mode=TwoWay}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <cal:ActionMessage MethodName="CaptureNode">
                                            <cal:Parameter Value="$source"></cal:Parameter>
                                            <cal:Parameter Value="$dataContext"></cal:Parameter>
                                            <cal:Parameter Value="$eventArgs"></cal:Parameter>
                                        </cal:ActionMessage>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <cal:ActionMessage MethodName="ReleaseNode">
                                            <cal:Parameter Value="$eventArgs"></cal:Parameter>
                                        </cal:ActionMessage>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseMove">
                                        <cal:ActionMessage MethodName="MoveNode">
                                            <cal:Parameter Value="$eventArgs"></cal:Parameter>
                                        </cal:ActionMessage>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseRightButtonDown">
                                        <cal:ActionMessage MethodName="ConnectSourceNode">
                                            <cal:Parameter Value="$source"></cal:Parameter>
                                            <cal:Parameter Value="$dataContext"></cal:Parameter>
                                            <cal:Parameter Value="$eventArgs"></cal:Parameter>
                                        </cal:ActionMessage>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseRightButtonUp">
                                        <cal:ActionMessage MethodName="ConnectTargetNode">
                                            <cal:Parameter Value="$source"></cal:Parameter>
                                            <cal:Parameter Value="$dataContext"></cal:Parameter>
                                            <cal:Parameter Value="$eventArgs"></cal:Parameter>
                                        </cal:ActionMessage>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Ellipse Stroke="Black" Fill="White" StrokeThickness="2" Width="{Binding NodeDiameter}" Height="{Binding NodeDiameter}" />
                                <TextBlock Text="{Binding Key}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Canvas>
    </Grid>
</UserControl>
 
